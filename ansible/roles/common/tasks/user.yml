---
  - import_tasks: ../../../register/bin_path.yml

  # remove user when remove variable is defined
  - name: "remove users"
    user:
      state: absent
      remove: yes
      name: "{{ item.name }}"
    loop: "{{ users + additional_users|flatten(levels=1) }}"
    when: item.state == 'absent'

  # realize user
  - shell: command -v zsh
    register: zsh_bin
    changed_when: false

  - name: set facts
    set_fact:
      user_groups: "ssh,sudo,adm,systemd-journal,systemd-timesync,systemd-network,systemd-resolve"

  - name: append libvirt and kvm group to user
    set_fact:
      user_groups: "{{ user_groups }},libvirt,kvm"
    when: libvirtd_bin.stdout != '' and ansible_virtualization_role == 'host'

  - name: create users
    user:
      state: present
      name: "{{ item.name }}"
      groups: "{{ user_groups }}"
      append: yes
      shell: "{{ user_shell | default(zsh_bin.stdout) }}"
    loop: "{{ users + additional_users|flatten(levels=1) }}"
    when: not item.state == 'absent'

  # install shell stuff
  - name: install zshrc
    copy:
      src: "{{ lookup('first_found', ['user/' + item.name + '/zshrc', 'user/default/zshrc']) }}"
      dest: "/home/{{ item.name }}/.zshrc"
    loop: "{{ users + additional_users|flatten(levels=1) }}"
    when: item.state != 'absent'

  - name: install vimrc
    copy:
      src: "{{ lookup('first_found', ['user/' + item.name + '/vimrc', 'user/default/vimrc']) }}"
      dest: "/home/{{ item.name }}/.vimrc"
    loop: "{{ users + additional_users|flatten(levels=1) }}"
    when: item.state != 'absent'

  - name: install screenrc
    copy:
      src: "{{ lookup('first_found', ['user/' + item.name + '/screenrc', 'user/default/screenrc']) }}"
      dest: "/home/{{ item.name }}/.screenrc"
    loop: "{{ users + additional_users|flatten(levels=1) }}"
    when: item.state != 'absent'

  - name: add user's authorized_keys
    authorized_key:
      user: "{{ item.name }}"
      manage_dir: true
      key: "{{ lookup('keepass', 'ansible/authorized_keys/' + item.name + '.notes', errors='warn') }}"
      state: present
      exclusive: yes
    loop: "{{ users + additional_users|flatten(levels=1) }}"
    when: item.state != 'absent' and item.name != 'voc'
    tags: authorized_keys

  - name: add user's authorized_keys to voc
    authorized_key:
      user: voc
      manage_dir: true
      key: "{{ lookup('keepass', 'ansible/authorized_keys/' + item.name + '.notes', errors='warn') }}"
      state: present
    loop: "{{ users + additional_users|flatten(levels=1) }}"
    when: item.state != 'absent' and item.name != 'voc'
    tags: authorized_keys
