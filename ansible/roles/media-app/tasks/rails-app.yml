---
- name: Add SSH keys to rails user for cap deployment
  authorized_key:
    user: media
    manage_dir: true
    state: present
    key: "{{ lookup('keepass', 'ansible/authorized_keys/' + item.name + '.notes', errors='warn') }}"
  with_items:
    - "{{ users }}"
    - "{{ additional_users }}"
  when: item.state != 'absent' and item.name != 'voc'

- file: path=/srv/media/media-site/shared/config state=directory
        mode=0755 owner=media group=media
- file: path=/srv/media/media-site/shared/log state=directory
        mode=0755 owner=media group=media

- copy: src=app/{{ item }}
        dest=/srv/media/media-site/shared/{{ item }}
        mode=0750 owner=media group=media
  loop:
    - clear_caches.sh
    - console
    - reload_puma

- template: src=app/{{ item }}
            dest=/srv/media/media-site/shared/config/{{ item }}
            mode=0640 owner=media group=media
  loop:
    - database.yml
    - secrets.yml
    - puma.rb

- copy: content={{ app_settings }}
        dest=/srv/media/media-site/shared/config/settings.yml
        owner=media group=media mode=0640

- copy: content={{ app_dotenv }}
        dest=/srv/media/media-site/shared/.env.production
        owner=media group=media mode=0640

- copy: content="ruby-{{ ruby_version }}@media-site"
        dest=/srv/media/media-site/shared/.ruby-version
        owner=media group=media mode=0640

- copy: src=logrotate
        dest=/etc/logrotate.d/local-media-site
        mode=0644 owner=root group=root

- template: src=voctoweb-puma.service
            dest=/etc/systemd/system/voctoweb-puma.service
            mode=0644 owner=root group=root

- template: src=voctoweb-sidekiq.service
            dest=/etc/systemd/system/voctoweb-sidekiq.service
            mode=0644 owner=root group=root

- systemd: state=started enabled=yes name=voctoweb-puma.service
- systemd: state=started enabled=yes name=voctoweb-sidekiq.service

- copy: src=app/{{ item }}
        dest=/srv/media/media-site/shared/{{ item }}
        mode=0750 owner=media group=media
  loop:
    - dump-public-fixtures.sh

- cron: user=media minute="20" cron_file="dump_public_fixtures"
        job="/srv/media/media-site/shared/dump-public-fixtures.sh"
        name="dump public database"

- file: path=/etc/postfix/maps state=directory

- copy: content="{{ postfix_generic_map }}"
        dest=/etc/postfix/maps/generic
        owner=root group=root mode=0644

- template: src=postfix.conf
            dest=/etc/postfix/main.cf
            mode=0644 owner=root group=root

