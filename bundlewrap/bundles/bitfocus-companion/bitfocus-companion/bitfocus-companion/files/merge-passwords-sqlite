#!/usr/bin/env python3

import os
import sqlite3
import sys
from json import dumps, load, loads
from traceback import print_exc


def replace_credentials(credentials, database):
    for key, value in credentials.get("userconfig", {}).items():
        database["userconfig"][key] = value

    for instance, config in credentials.get("instance", {}).items():
        for instance_identifier in database["instance"]:
            if (
                database["instance"][instance_identifier].get("instance_type")
                == config["instance_type"]
            ):
                for key, value in config.items():
                    database["instance"][instance_identifier][key] = value
    return database


def main():
    companion_home = "/var/opt/bitfocus-companion/"
    credentialfile = "/var/opt/bitfocus-companion/passwords.json"

    with open(credentialfile, "r") as credfile:
        credentials = load(credfile)

    for filename in os.listdir(companion_home):
        path = os.path.join(companion_home, filename, "db.sqlite")
        if not os.path.isfile(path):
            continue

        print(f"working on directory '{filename}'")
        try:
            database = sqlite3.connect(path)
        except Exception:
            print_exc(file=sys.stdout)
            continue

        companion_database = {
            "instance": loads(
                database.execute(
                    "select value from main where id='instance';"
                ).fetchone()[0]
            ),
            "userconfig": loads(
                database.execute(
                    "select value from main where id='userconfig';"
                ).fetchone()[0]
            ),
        }

        new_database = replace_credentials(credentials, companion_database)

        for k, v in new_database.items():
            database.execute(
                "update main set value = :value where id = :id",
                {"value": dumps(v), "id": k},
            )

        database.commit()
        database.close()

        print(f"Credentials updated in {path}")


if __name__ == "__main__":
    main()
