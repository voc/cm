bundles = ["encoder-common", "mdadm", "nginx", "samba", "zfs"]
groups = ["crs-workers", "debian-bookworm"]

ipmi_hostname = "10.73.200.4"
ipmi_username = "root"
ipmi_password = "!decrypt:encrypt$gAAAAABny_xTBVp9cCPUc-acstouz8J5C6KW36QKmJyZYXs6yL4Ll39p9NxJVwJqsiXwacBOLDQMcE5NDYU1PRS1DR66XZVu8w=="

# for the occasional repair task, so users can use a dedicated machine
# to render the output files after preparing in kdenlive
[metadata.apt.packages.frei0r-plugins]
[metadata.apt.packages.melt]

# for intro-outro-generator
[metadata.apt.packages.libmagickwand-dev]

[metadata.bash_aliases]
swt-colo = "sudo picocom /dev/ttyS0"

[metadata.crs-worker]
autostart_scripts = [
  "recording-scheduler",
  "mount4cut",
  "cut-postprocessor",
  "postencoding",
  "postprocessing",
]

[metadata.crs-worker.secrets.meta]
token = "!decrypt:encrypt$gAAAAABk35Itmzhf3Z4xPLMT3IVhRKnm0GPS0S7grfHxvRlbFU2pJ-906p3iBz-ebqABDHtqZITWyO68Y442FaDeqN2_wKhgRvO10I4BB4uP8ki_Enmtg_TihUsnx2x1e4kzedxpmVF2"
secret = "!decrypt:encrypt$gAAAAABk35IynVb6gzhx7o51UQhlLX6BOVS1U5ZENrMlnYggMSjbLC0uSWLT6nvtibE7eTmD4ZFOmYjDJ_7uGrseH_bBva_HruGiBztnrtd5d9qaYRagpf_B9KQfSyXqjP_FbHLcM4Bo"

[metadata.crs-worker.secrets.encoding]
token = "!decrypt:encrypt$gAAAAABk35IGE_pw8FevjzPXEzYIBjoD1u7Uoqz_6hB6plLt_Fsu0imi220dm_3szThLCib_fCt4YN_xcizsY3ZrXPvr7ike0joG6tADsl_7WL0fU2nbK71r_Uz2NwNc9t8zCM6WRrin"
secret = "!decrypt:encrypt$gAAAAABk35IM38TpDZfXUb2a4MCCdgP3FKpXciy_hjFIFRBU3fXu5DuF2jT95mqxLwqpkqdQ42EMlUOVdfyanxRc2zGEAP4l52yXI0yjhHnVj-LX_5l038oQnfMe1hpTWaR5Ih7Tk9QE"

[metadata.interfaces.'bond0.3504']
ips = ["10.73.200.24/16"]
gateway4 = "10.73.0.254"

[metadata.nginx]
# this should not be needed, since this machine is usually only reachable
# on the internal network anyway. But this machine had a public ip address
# temporarily in the past, so here we go ...
restrict-to = ["voc-internal", "voc-vpn"]

[metadata.nginx.vhosts.video-encoded]
domain = "storage.lan.c3voc.de"
webroot = "/video/encoded"

[metadata.samba.shares.c3voctv]
path = "/video/c3voctv"

[metadata.systemd-networkd.bonds.bond0]
match = ["enp3s0f0", "enp3s0f1"]

[metadata.zfs.module_options]
zfs_arc_max_gb = 100

[metadata.zfs.pools.video.when_creating]
ashift = 12

[[metadata.zfs.pools.video.when_creating.config]]
devices = [
  "/dev/disk/by-id/ata-WDC_WD3000FYYZ-01UL1B0_WD-WCC130269302",
  "/dev/disk/by-id/ata-WDC_WD3000FYYZ-01UL1B0_WD-WCC130291135",
  "/dev/disk/by-id/ata-WDC_WD3000FYYZ-01UL1B0_WD-WCC130291202",
  "/dev/disk/by-id/ata-WDC_WD3000FYYZ-01UL1B0_WD-WCC130298009",
  "/dev/disk/by-id/ata-WDC_WD3000FYYZ-01UL1B0_WD-WCC130298111",
  "/dev/disk/by-id/ata-WDC_WD3000FYYZ-01UL1B0_WD-WMC130231072",
  "/dev/disk/by-id/ata-WDC_WD3000FYYZ-01UL1B1_WD-WCC131052364",
  "/dev/disk/by-id/ata-WDC_WD3003FZEX-00Z4SA0_WD-WMC1F0E0YDS8",
]
type = "raidz2"

[[metadata.zfs.pools.video.when_creating.config]]
devices = [
  "/dev/disk/by-id/ata-INTEL_SSDSC2CW240A3_CVCV3180015K240CGN-part3",
  "/dev/disk/by-id/ata-INTEL_SSDSC2CW240A3_CVCV305404BZ240CGN-part3",
]
type = "log"

[[metadata.zfs.pools.video.when_creating.config]]
devices = [
  "/dev/disk/by-id/ata-INTEL_SSDSC2CW240A3_CVCV3180015K240CGN-part4",
  "/dev/disk/by-id/ata-INTEL_SSDSC2CW240A3_CVCV305404BZ240CGN-part4",
]
type = "cache"

[metadata.zfs.datasets.'video/giftschrank']
# storage for stuff we cannot release right now lives here, so we can
# remove all the other stuff from an event
mountpoint = "/video/giftschrank"

[metadata.zfs.datasets.'video/c3voctv']
mountpoint = "/video/c3voctv"
